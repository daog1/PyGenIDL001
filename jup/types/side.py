'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey, EnumForCodegen;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;
from solders.sysvar import RENT;


class BidJSON(typing.TypedDict):
    kind: typing.Literal["Bid"]


@dataclass
class Bid:
    discriminator: typing.ClassVar = 0
    def to_json(self) -> BidJSON:
        return BidJSON(
            kind="Bid",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Bid": {},
        }




class AskJSON(typing.TypedDict):
    kind: typing.Literal["Ask"]


@dataclass
class Ask:
    discriminator: typing.ClassVar = 1
    def to_json(self) -> AskJSON:
        return AskJSON(
            kind="Ask",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Ask": {},
        }





SideKind = typing.Union[
    Bid,
    Ask,
]
SideJSON = typing.Union[
    BidJSON,
    AskJSON,
]

def from_decoded(obj: dict) -> SideKind:
    if not isinstance(obj, dict):
        raise ValueError("Invalid enum object")
    if "Bid" in obj:
      return Bid()
    if "Ask" in obj:
      return Ask()
    raise ValueError("Invalid enum object")

def from_json(obj: SideJSON) -> SideKind:
    if obj["kind"] == "Bid":
        return Bid()

    if obj["kind"] == "Ask":
        return Ask()

    kind = obj["kind"]
    raise ValueError(f"Unrecognized enum kind: {kind}")

layout = EnumForCodegen(
"Bid" / borsh.CStruct(),
"Ask" / borsh.CStruct(),
)
