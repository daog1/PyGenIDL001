'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Construct, Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;
from . import remainingAccountsSlice;

class RemainingAccountsInfoJSON(typing.TypedDict):
    slices: list[remainingAccountsSlice.RemainingAccountsSliceJSON]

@dataclass
class RemainingAccountsInfo:
    layout: typing.ClassVar = borsh.CStruct(
        "slices" /borsh.Vec(typing.cast(Construct, remainingAccountsSlice.RemainingAccountsSlice.layout)),
        )
    #fields
    slices: list[remainingAccountsSlice.RemainingAccountsSlice]
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "RemainingAccountsInfo":
        return cls(
        slices=list(map(lambda item:remainingAccountsSlice.RemainingAccountsSlice.from_json(item),obj["slices"])),
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "slices": self.slices,
                }

    def to_json(self) -> RemainingAccountsInfoJSON:
        return {
                "slices": list(map(lambda item:item.to_json(),self.slices)),
                }

    @classmethod
    def from_json(cls, obj: RemainingAccountsInfoJSON) -> "RemainingAccountsInfo":
        return cls(
                slices=list(map(lambda item:remainingAccountsSlice.RemainingAccountsSlice.from_json(item),obj["slices"])),
        )






