'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from construct import Container;
from dataclasses import dataclass;
from solders.instruction import AccountMeta, Instruction;
from solders.pubkey import Pubkey as SolPubkey;
from solders.sysvar import RENT;
from ..program_id import PROGRAM_ID;
class CloseTokenArgs(typing.TypedDict):
    id:int
    burnAll:bool


layout = borsh.CStruct(
    "id" /borsh.U8,
    "burnAll" /borsh.Bool,
    )


class CloseTokenAccounts(typing.TypedDict):
    operator:SolPubkey
    wallet:SolPubkey
    programAuthority:SolPubkey
    programTokenAccount:SolPubkey
    mint:SolPubkey
    tokenProgram:SolPubkey

def CloseToken(
    args: CloseTokenArgs,
    accounts: CloseTokenAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["operator"], is_signer=True, is_writable=False),
    AccountMeta(pubkey=accounts["wallet"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["programAuthority"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["programTokenAccount"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["mint"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["tokenProgram"], is_signer=False, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\x1a\x4a\xec\x97\x68\x40\xb7\xf9"
    encoded_args = layout.build({
        "id":args["id"],
        "burnAll":args["burnAll"],
       })

    data = identifier + encoded_args
    return Instruction(program_id,data,keys)





