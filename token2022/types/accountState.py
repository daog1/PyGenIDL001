'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from anchorpy.borsh_extension import EnumForCodegen
from dataclasses import dataclass


class UninitializedJSON(typing.TypedDict):
    kind: typing.Literal["Uninitialized"]


@dataclass
class Uninitialized:
    discriminator: typing.ClassVar = 0
    def to_json(self) -> UninitializedJSON:
        return UninitializedJSON(
            kind="Uninitialized",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Uninitialized": {},
        }




class InitializedJSON(typing.TypedDict):
    kind: typing.Literal["Initialized"]


@dataclass
class Initialized:
    discriminator: typing.ClassVar = 1
    def to_json(self) -> InitializedJSON:
        return InitializedJSON(
            kind="Initialized",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Initialized": {},
        }




class FrozenJSON(typing.TypedDict):
    kind: typing.Literal["Frozen"]


@dataclass
class Frozen:
    discriminator: typing.ClassVar = 2
    def to_json(self) -> FrozenJSON:
        return FrozenJSON(
            kind="Frozen",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Frozen": {},
        }





AccountStateKind = typing.Union[
    Uninitialized,
    Initialized,
    Frozen,
]
AccountStateJSON = typing.Union[
    UninitializedJSON,
    InitializedJSON,
    FrozenJSON,
]

def from_decoded(obj: dict) -> AccountStateKind:
    if not isinstance(obj, dict):
        raise ValueError("Invalid enum object")
    if "Uninitialized" in obj:
      return Uninitialized()
    if "Initialized" in obj:
      return Initialized()
    if "Frozen" in obj:
      return Frozen()
    raise ValueError("Invalid enum object")

def from_json(obj: AccountStateJSON) -> AccountStateKind:
    if obj["kind"] == "Uninitialized":
        return Uninitialized()

    if obj["kind"] == "Initialized":
        return Initialized()

    if obj["kind"] == "Frozen":
        return Frozen()

    kind = obj["kind"]
    raise ValueError(f"Unrecognized enum kind: {kind}")


layout = EnumForCodegen(
"Uninitialized" / borsh.CStruct(),
"Initialized" / borsh.CStruct(),
"Frozen" / borsh.CStruct(),
)
