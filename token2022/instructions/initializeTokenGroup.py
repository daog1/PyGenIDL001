'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from anchorpy.borsh_extension import BorshPubkey
from solders.instruction import AccountMeta, Instruction
from solders.pubkey import Pubkey as SolPubkey
from ..program_id import PROGRAM_ID
from ..shared import ZeroableOption
class InitializeTokenGroupArgs(typing.TypedDict):
    updateAuthority:SolPubkey
    maxSize:int


layout = borsh.CStruct(
    "updateAuthority" /ZeroableOption(BorshPubkey),
    "maxSize" /borsh.U64,
    )


class InitializeTokenGroupAccounts(typing.TypedDict):
    group:SolPubkey
    mint:SolPubkey
    mintAuthority:SolPubkey

def InitializeTokenGroup(
    args: InitializeTokenGroupArgs,
    accounts: InitializeTokenGroupAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["group"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["mint"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["mintAuthority"], is_signer=True, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    encoded_args = layout.build({
        "updateAuthority":args["updateAuthority"],
        "maxSize":args["maxSize"],
       })
    return Instruction(program_id,encoded_args,keys)



