'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from anchorpy.borsh_extension import BorshPubkey
from solders.instruction import AccountMeta, Instruction
from solders.pubkey import Pubkey as SolPubkey
from ..program_id import TOKEN_2022_PROGRAM_ADDRESS
class InitializeMint2Args(typing.TypedDict):
    decimals:int
    mintAuthority:SolPubkey
    freezeAuthority:typing.Optional[SolPubkey]


layout = borsh.CStruct(
    "decimals" /borsh.U8,
    "mintAuthority" /BorshPubkey,
    "freezeAuthority" /borsh.Option(BorshPubkey),
    )


class InitializeMint2Accounts(typing.TypedDict):
    mint:SolPubkey

def InitializeMint2(
    args: InitializeMint2Args,
    accounts: InitializeMint2Accounts,
    program_id: SolPubkey =  TOKEN_2022_PROGRAM_ADDRESS,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["mint"], is_signer=False, is_writable=True),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\x14"
    encoded_args = layout.build({
        "decimals":args["decimals"],
        "mintAuthority":args["mintAuthority"],
        "freezeAuthority":args["freezeAuthority"],
       })
    data = identifier + encoded_args
    return Instruction(program_id,data,keys)



