'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import typing
from solders.instruction import AccountMeta, Instruction
from solders.pubkey import Pubkey as SolPubkey
from ..program_id import TOKEN_2022_PROGRAM_ADDRESS

class WithdrawExcessLamportsAccounts(typing.TypedDict):
    sourceAccount:SolPubkey
    destinationAccount:SolPubkey
    authority:SolPubkey

def WithdrawExcessLamports(
    accounts: WithdrawExcessLamportsAccounts,
    program_id: SolPubkey =  TOKEN_2022_PROGRAM_ADDRESS,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["sourceAccount"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["destinationAccount"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["authority"], is_signer=True, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\x26"
    encoded_args = b""
    data = identifier + encoded_args
    return Instruction(program_id,data,keys)




