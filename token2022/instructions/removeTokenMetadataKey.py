'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from solders.instruction import AccountMeta, Instruction
from solders.pubkey import Pubkey as SolPubkey
from ..program_id import PROGRAM_ID
class RemoveTokenMetadataKeyArgs(typing.TypedDict):
    idempotent:bool
    key:borsh.String


layout = borsh.CStruct(
    "idempotent" /borsh.Bool,
    "key" /borsh.String,
    )


class RemoveTokenMetadataKeyAccounts(typing.TypedDict):
    metadata:SolPubkey
    updateAuthority:SolPubkey

def RemoveTokenMetadataKey(
    args: RemoveTokenMetadataKeyArgs,
    accounts: RemoveTokenMetadataKeyAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["metadata"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["updateAuthority"], is_signer=True, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    encoded_args = layout.build({
        "idempotent":args["idempotent"],
        "key":args["key"],
       })
    return Instruction(program_id,encoded_args,keys)



