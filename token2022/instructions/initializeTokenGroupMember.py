'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import typing
from solders.instruction import AccountMeta, Instruction
from solders.pubkey import Pubkey as SolPubkey
from ..program_id import PROGRAM_ID

class InitializeTokenGroupMemberAccounts(typing.TypedDict):
    member:SolPubkey
    memberMint:SolPubkey
    memberMintAuthority:SolPubkey
    group:SolPubkey
    groupUpdateAuthority:SolPubkey

def InitializeTokenGroupMember(
    accounts: InitializeTokenGroupMemberAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["member"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["memberMint"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["memberMintAuthority"], is_signer=True, is_writable=False),
    AccountMeta(pubkey=accounts["group"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["groupUpdateAuthority"], is_signer=True, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    encoded_args = b""
    return Instruction(program_id,encoded_args,keys)



