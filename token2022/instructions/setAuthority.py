'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from anchorpy.borsh_extension import BorshPubkey
from solders.instruction import AccountMeta, Instruction
from solders.pubkey import Pubkey as SolPubkey
from .. import types
from ..program_id import PROGRAM_ID
class SetAuthorityArgs(typing.TypedDict):
    authorityType:types.authorityType.AuthorityTypeKind
    newAuthority:typing.Optional[SolPubkey]


layout = borsh.CStruct(
    "authorityType" /types.authorityType.layout,
    "newAuthority" /borsh.Option(BorshPubkey),
    )


class SetAuthorityAccounts(typing.TypedDict):
    owned:SolPubkey
    owner:SolPubkey

def SetAuthority(
    args: SetAuthorityArgs,
    accounts: SetAuthorityAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["owned"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["owner"], is_signer=True, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\x06"
    encoded_args = layout.build({
        "authorityType":args["authorityType"].to_encodable(),
        "newAuthority":args["newAuthority"],
       })
    data = identifier + encoded_args
    return Instruction(program_id,data,keys)



