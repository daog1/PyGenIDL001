'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey;
from solders.sysvar import RENT;

class DisableEventJSON(typing.TypedDict):
    timestamp: int
    admin: str
    disableCreatePool: bool
    disableDeposit: bool
    disableWithdraw: bool
    disableBuy: bool
    disableSell: bool

@dataclass
class DisableEvent:
    layout: typing.ClassVar = borsh.CStruct(
        "timestamp" /borsh.I64,
        "admin" /BorshPubkey,
        "disableCreatePool" /borsh.Bool,
        "disableDeposit" /borsh.Bool,
        "disableWithdraw" /borsh.Bool,
        "disableBuy" /borsh.Bool,
        "disableSell" /borsh.Bool,
        )
    #fields
    timestamp: int
    admin: Pubkey
    disableCreatePool: bool
    disableDeposit: bool
    disableWithdraw: bool
    disableBuy: bool
    disableSell: bool
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "DisableEvent":
        return cls(
        timestamp=obj["timestamp"],
        admin=Pubkey.from_string(obj["admin"]),
        disableCreatePool=obj["disableCreatePool"],
        disableDeposit=obj["disableDeposit"],
        disableWithdraw=obj["disableWithdraw"],
        disableBuy=obj["disableBuy"],
        disableSell=obj["disableSell"],
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "timestamp": self.timestamp,
                "admin": self.admin,
                "disableCreatePool": self.disableCreatePool,
                "disableDeposit": self.disableDeposit,
                "disableWithdraw": self.disableWithdraw,
                "disableBuy": self.disableBuy,
                "disableSell": self.disableSell,
                }

    def to_json(self) -> DisableEventJSON:
        return {
                "timestamp": self.timestamp,
                "admin": str(self.admin),
                "disableCreatePool": self.disableCreatePool,
                "disableDeposit": self.disableDeposit,
                "disableWithdraw": self.disableWithdraw,
                "disableBuy": self.disableBuy,
                "disableSell": self.disableSell,
                }

    @classmethod
    def from_json(cls, obj: DisableEventJSON) -> "DisableEvent":
        return cls(
                timestamp=obj["timestamp"],
                admin=Pubkey.from_string(obj["admin"]),
                disableCreatePool=obj["disableCreatePool"],
                disableDeposit=obj["disableDeposit"],
                disableWithdraw=obj["disableWithdraw"],
                disableBuy=obj["disableBuy"],
                disableSell=obj["disableSell"],
        )






