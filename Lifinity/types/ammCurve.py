'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;
from solders.sysvar import RENT;

class AmmCurveJSON(typing.TypedDict):
    curveType: int
    curveParameters: int

@dataclass
class AmmCurve:
    layout: typing.ClassVar = borsh.CStruct(
        "curveType" /borsh.U8,
        "curveParameters" /borsh.U64,
        )
    #fields
    curveType: int
    curveParameters: int
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "AmmCurve":
        return cls(
        curveType=obj["curveType"],
        curveParameters=obj["curveParameters"],
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "curveType": self.curveType,
                "curveParameters": self.curveParameters,
                }

    def to_json(self) -> AmmCurveJSON:
        return {
                "curveType": self.curveType,
                "curveParameters": self.curveParameters,
                }

    @classmethod
    def from_json(cls, obj: AmmCurveJSON) -> "AmmCurve":
        return cls(
                curveType=obj["curveType"],
                curveParameters=obj["curveParameters"],
        )






