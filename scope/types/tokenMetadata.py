'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from construct import Container
from dataclasses import dataclass

class TokenMetadataJSON(typing.TypedDict):
    name: list[int]
    maxAgePriceSlots: int
    groupIdsBitset: int
    reserved: list[int]

@dataclass
class TokenMetadata:
    layout: typing.ClassVar = borsh.CStruct(
        "name" /borsh.U8[32],
        "maxAgePriceSlots" /borsh.U64,
        "groupIdsBitset" /borsh.U64,
        "reserved" /borsh.U64[15],
        )
    #fields
    name: list[int]
    maxAgePriceSlots: int
    groupIdsBitset: int
    reserved: list[int]
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "TokenMetadata":
        return cls(
        name=obj["name"],
        maxAgePriceSlots=obj["maxAgePriceSlots"],
        groupIdsBitset=obj["groupIdsBitset"],
        reserved=obj["reserved"],
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "name": self.name,
                "maxAgePriceSlots": self.maxAgePriceSlots,
                "groupIdsBitset": self.groupIdsBitset,
                "reserved": self.reserved,
                }

    def to_json(self) -> TokenMetadataJSON:
        return {
                "name": self.name,
                "maxAgePriceSlots": self.maxAgePriceSlots,
                "groupIdsBitset": self.groupIdsBitset,
                "reserved": self.reserved,
                }

    @classmethod
    def from_json(cls, obj: TokenMetadataJSON) -> "TokenMetadata":
        return cls(
                name=obj["name"],
                maxAgePriceSlots=obj["maxAgePriceSlots"],
                groupIdsBitset=obj["groupIdsBitset"],
                reserved=obj["reserved"],
        )






