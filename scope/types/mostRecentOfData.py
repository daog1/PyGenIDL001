'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;

class MostRecentOfDataJSON(typing.TypedDict):
    sourceEntries: list[int]
    maxDivergenceBps: int
    sourcesMaxAgeS: int

@dataclass
class MostRecentOfData:
    layout: typing.ClassVar = borsh.CStruct(
        "sourceEntries" /borsh.U16[4],
        "maxDivergenceBps" /borsh.U16,
        "sourcesMaxAgeS" /borsh.U16,
        )
    #fields
    sourceEntries: list[int]
    maxDivergenceBps: int
    sourcesMaxAgeS: int
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "MostRecentOfData":
        return cls(
        sourceEntries=obj["sourceEntries"],
        maxDivergenceBps=obj["maxDivergenceBps"],
        sourcesMaxAgeS=obj["sourcesMaxAgeS"],
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "sourceEntries": self.sourceEntries,
                "maxDivergenceBps": self.maxDivergenceBps,
                "sourcesMaxAgeS": self.sourcesMaxAgeS,
                }

    def to_json(self) -> MostRecentOfDataJSON:
        return {
                "sourceEntries": self.sourceEntries,
                "maxDivergenceBps": self.maxDivergenceBps,
                "sourcesMaxAgeS": self.sourcesMaxAgeS,
                }

    @classmethod
    def from_json(cls, obj: MostRecentOfDataJSON) -> "MostRecentOfData":
        return cls(
                sourceEntries=obj["sourceEntries"],
                maxDivergenceBps=obj["maxDivergenceBps"],
                sourcesMaxAgeS=obj["sourcesMaxAgeS"],
        )






