'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from anchorpy.borsh_extension import BorshPubkey
from construct import Container
from dataclasses import dataclass
from solders.pubkey import Pubkey as SolPubkey

class ListJSON(typing.TypedDict):
    account: str
    itemSize: int
    count: int
    newAccount: str
    copiedCount: int

@dataclass
class List:
    layout: typing.ClassVar = borsh.CStruct(
        "account" /BorshPubkey,
        "itemSize" /borsh.U32,
        "count" /borsh.U32,
        "newAccount" /BorshPubkey,
        "copiedCount" /borsh.U32,
        )
    #fields
    account: SolPubkey
    itemSize: int
    count: int
    newAccount: SolPubkey
    copiedCount: int
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "List":
        return cls(
        account=obj["account"],
        itemSize=obj["itemSize"],
        count=obj["count"],
        newAccount=obj["newAccount"],
        copiedCount=obj["copiedCount"],
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "account": self.account,
                "itemSize": self.itemSize,
                "count": self.count,
                "newAccount": self.newAccount,
                "copiedCount": self.copiedCount,
                }

    def to_json(self) -> ListJSON:
        return {
                "account": str(self.account),
                "itemSize": self.itemSize,
                "count": self.count,
                "newAccount": str(self.newAccount),
                "copiedCount": self.copiedCount,
                }

    @classmethod
    def from_json(cls, obj: ListJSON) -> "List":
        return cls(
                account=SolPubkey.from_string(obj["account"]),
                itemSize=obj["itemSize"],
                count=obj["count"],
                newAccount=SolPubkey.from_string(obj["newAccount"]),
                copiedCount=obj["copiedCount"],
        )






