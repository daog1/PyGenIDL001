'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from construct import Container;
from dataclasses import dataclass;
from solders.instruction import AccountMeta, Instruction;
from solders.pubkey import Pubkey as SolPubkey;
from ..program_id import PROGRAM_ID;
class UpdateTokenMetadataArgs(typing.TypedDict):
    index:int
    mode:int
    feedName:str
    value:str


layout = borsh.CStruct(
    "index" /borsh.U64,
    "mode" /borsh.U64,
    "feedName" /borsh.String,
    "value" /borsh.String,
    )


class UpdateTokenMetadataAccounts(typing.TypedDict):
    admin:SolPubkey
    configuration:SolPubkey
    tokensMetadata:SolPubkey

def UpdateTokenMetadata(
    args: UpdateTokenMetadataArgs,
    accounts: UpdateTokenMetadataAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["admin"], is_signer=True, is_writable=False),
    AccountMeta(pubkey=accounts["configuration"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["tokensMetadata"], is_signer=False, is_writable=True),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\xf3\x06\x08\x17\x7e\xb5\xfb\x9e"
    encoded_args = layout.build({
        "index":args["index"],
        "mode":args["mode"],
        "feedName":args["feedName"],
        "value":args["value"],
       })
    data = identifier + encoded_args
    return Instruction(program_id,data,keys)



