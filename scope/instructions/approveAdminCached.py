'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from solders.instruction import AccountMeta, Instruction
from solders.pubkey import Pubkey as SolPubkey
from ..program_id import PROGRAM_ID
class ApproveAdminCachedArgs(typing.TypedDict):
    feedName:str


layout = borsh.CStruct(
    "feedName" /borsh.String,
    )


class ApproveAdminCachedAccounts(typing.TypedDict):
    adminCached:SolPubkey
    configuration:SolPubkey

def ApproveAdminCached(
    args: ApproveAdminCachedArgs,
    accounts: ApproveAdminCachedAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["adminCached"], is_signer=True, is_writable=False),
    AccountMeta(pubkey=accounts["configuration"], is_signer=False, is_writable=True),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\x65\x95\x61\x3a\x30\x4f\x10\x69"
    encoded_args = layout.build({
        "feedName":args["feedName"],
       })
    data = identifier + encoded_args
    return Instruction(program_id,data,keys)



