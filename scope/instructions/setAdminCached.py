'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.instruction import AccountMeta, Instruction;
from solders.pubkey import Pubkey as SolPubkey;
from ..program_id import PROGRAM_ID;
class SetAdminCachedArgs(typing.TypedDict):
    newAdmin:SolPubkey
    feedName:str


layout = borsh.CStruct(
    "newAdmin" /BorshPubkey,
    "feedName" /borsh.String,
    )


class SetAdminCachedAccounts(typing.TypedDict):
    admin:SolPubkey
    configuration:SolPubkey

def SetAdminCached(
    args: SetAdminCachedArgs,
    accounts: SetAdminCachedAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["admin"], is_signer=True, is_writable=False),
    AccountMeta(pubkey=accounts["configuration"], is_signer=False, is_writable=True),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\x72\x0e\x69\xcd\xd8\x94\x1e\x4b"
    encoded_args = layout.build({
        "newAdmin":args["newAdmin"],
        "feedName":args["feedName"],
       })
    data = identifier + encoded_args
    return Instruction(program_id,data,keys)



