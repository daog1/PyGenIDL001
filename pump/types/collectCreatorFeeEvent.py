'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;

class CollectCreatorFeeEventJSON(typing.TypedDict):
    timestamp: int
    creator: str
    creatorFee: int

@dataclass
class CollectCreatorFeeEvent:
    layout: typing.ClassVar = borsh.CStruct(
        "timestamp" /borsh.I64,
        "creator" /BorshPubkey,
        "creatorFee" /borsh.U64,
        )
    #fields
    timestamp: int
    creator: SolPubkey
    creatorFee: int
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "CollectCreatorFeeEvent":
        return cls(
        timestamp=obj["timestamp"],
        creator=obj["creator"],
        creatorFee=obj["creatorFee"],
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "timestamp": self.timestamp,
                "creator": self.creator,
                "creatorFee": self.creatorFee,
                }

    def to_json(self) -> CollectCreatorFeeEventJSON:
        return {
                "timestamp": self.timestamp,
                "creator": str(self.creator),
                "creatorFee": self.creatorFee,
                }

    @classmethod
    def from_json(cls, obj: CollectCreatorFeeEventJSON) -> "CollectCreatorFeeEvent":
        return cls(
                timestamp=obj["timestamp"],
                creator=SolPubkey.from_string(obj["creator"]),
                creatorFee=obj["creatorFee"],
        )






