'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey;
from solders.sysvar import RENT;

class SetCreatorEventJSON(typing.TypedDict):
    timestamp: int
    mint: str
    bondingCurve: str
    creator: str

@dataclass
class SetCreatorEvent:
    layout: typing.ClassVar = borsh.CStruct(
        "timestamp" /borsh.I64,
        "mint" /BorshPubkey,
        "bondingCurve" /BorshPubkey,
        "creator" /BorshPubkey,
        )
    #fields
    timestamp: int
    mint: Pubkey
    bondingCurve: Pubkey
    creator: Pubkey
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "SetCreatorEvent":
        return cls(
        timestamp=obj["timestamp"],
        mint=obj["mint"],
        bondingCurve=obj["bondingCurve"],
        creator=obj["creator"],
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "timestamp": self.timestamp,
                "mint": self.mint,
                "bondingCurve": self.bondingCurve,
                "creator": self.creator,
                }

    def to_json(self) -> SetCreatorEventJSON:
        return {
                "timestamp": self.timestamp,
                "mint": str(self.mint),
                "bondingCurve": str(self.bondingCurve),
                "creator": str(self.creator),
                }

    @classmethod
    def from_json(cls, obj: SetCreatorEventJSON) -> "SetCreatorEvent":
        return cls(
                timestamp=obj["timestamp"],
                mint=Pubkey.from_string(obj["mint"]),
                bondingCurve=Pubkey.from_string(obj["bondingCurve"]),
                creator=Pubkey.from_string(obj["creator"]),
        )






