'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import typing;
from anchorpy.error import ProgramError;

class NotAuthorized(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6000, ""
        )

    code = 6000
    name = "NotAuthorized"
    msg = ""
class AlreadyInitialized(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6001, ""
        )

    code = 6001
    name = "AlreadyInitialized"
    msg = ""
class TooMuchSolRequired(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6002, ""
        )

    code = 6002
    name = "TooMuchSolRequired"
    msg = ""
class TooLittleSolReceived(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6003, ""
        )

    code = 6003
    name = "TooLittleSolReceived"
    msg = ""
class MintDoesNotMatchBondingCurve(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6004, ""
        )

    code = 6004
    name = "MintDoesNotMatchBondingCurve"
    msg = ""
class BondingCurveComplete(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6005, ""
        )

    code = 6005
    name = "BondingCurveComplete"
    msg = ""
class BondingCurveNotComplete(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6006, ""
        )

    code = 6006
    name = "BondingCurveNotComplete"
    msg = ""
class NotInitialized(ProgramError):
    def __init__(self) -> None:
        super().__init__(
            6007, ""
        )

    code = 6007
    name = "NotInitialized"
    msg = ""

CustomError = typing.Union[
    NotAuthorized,
    AlreadyInitialized,
    TooMuchSolRequired,
    TooLittleSolReceived,
    MintDoesNotMatchBondingCurve,
    BondingCurveComplete,
    BondingCurveNotComplete,
    NotInitialized,
 ]
CUSTOM_ERROR_MAP: dict[int, CustomError] = {
    6000: NotAuthorized(),
    6001: AlreadyInitialized(),
    6002: TooMuchSolRequired(),
    6003: TooLittleSolReceived(),
    6004: MintDoesNotMatchBondingCurve(),
    6005: BondingCurveComplete(),
    6006: BondingCurveNotComplete(),
    6007: NotInitialized(),
}

def from_code(code: int) -> typing.Optional[CustomError]:
    maybe_err = CUSTOM_ERROR_MAP.get(code)
    if maybe_err is None:
        return None
    return maybe_err

