'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from construct import Container;
from dataclasses import dataclass;
from solders.instruction import AccountMeta, Instruction;
from solders.pubkey import Pubkey as SolPubkey;
from ..program_id import PROGRAM_ID;
class TransferDepositArgs(typing.TypedDict):
    marketIndex:int
    amount:int


layout = borsh.CStruct(
    "marketIndex" /borsh.U16,
    "amount" /borsh.U64,
    )


class TransferDepositAccounts(typing.TypedDict):
    fromUser:SolPubkey
    toUser:SolPubkey
    userStats:SolPubkey
    authority:SolPubkey
    state:SolPubkey
    spotMarketVault:SolPubkey

def TransferDeposit(
    args: TransferDepositArgs,
    accounts: TransferDepositAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["fromUser"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["toUser"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["userStats"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["authority"], is_signer=True, is_writable=False),
    AccountMeta(pubkey=accounts["state"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["spotMarketVault"], is_signer=False, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\x14\x14\x93\xdf\x29\x3f\xcc\x6f"
    encoded_args = layout.build({
        "marketIndex":args["marketIndex"],
        "amount":args["amount"],
       })
    data = identifier + encoded_args
    return Instruction(program_id,data,keys)




