'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from construct import Container;
from dataclasses import dataclass;
from solders.instruction import AccountMeta, Instruction;
from solders.pubkey import Pubkey;
from solders.sysvar import RENT;
from .. import types;
from ..program_id import PROGRAM_ID;
class UpdateSerumFulfillmentConfigStatusArgs(typing.TypedDict):
    status:types.spotFulfillmentConfigStatus.SpotFulfillmentConfigStatusKind


layout = borsh.CStruct(
    "status" /types.spotFulfillmentConfigStatus.layout,
    )


class UpdateSerumFulfillmentConfigStatusAccounts(typing.TypedDict):
    state:Pubkey
    serumFulfillmentConfig:Pubkey
    admin:Pubkey

def UpdateSerumFulfillmentConfigStatus(
    args: UpdateSerumFulfillmentConfigStatusArgs,
    accounts: UpdateSerumFulfillmentConfigStatusAccounts,
    program_id: Pubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["state"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["serumFulfillmentConfig"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["admin"], is_signer=True, is_writable=True),
    AccountMeta(pubkey=RENT, is_signer=False, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\xab\x6d\xf0\xfb\x5f\x01\x95\x59"
    encoded_args = layout.build({
    "status":args["status"],
       })

    data = identifier + encoded_args
    return Instruction(program_id,data,keys)

