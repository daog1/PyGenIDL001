'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from construct import Container;
from dataclasses import dataclass;
from solders.instruction import AccountMeta, Instruction;
from solders.pubkey import Pubkey;
from solders.sysvar import RENT;
from ..program_id import PROGRAM_ID;

class SettleExpiredMarketPoolsToRevenuePoolAccounts(typing.TypedDict):
    state:Pubkey
    admin:Pubkey
    spotMarket:Pubkey
    perpMarket:Pubkey

def SettleExpiredMarketPoolsToRevenuePool(
    accounts: SettleExpiredMarketPoolsToRevenuePoolAccounts,
    program_id: Pubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["state"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["admin"], is_signer=True, is_writable=False),
    AccountMeta(pubkey=accounts["spotMarket"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["perpMarket"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=RENT, is_signer=False, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\x37\x13\xee\xa9\xe3\x5a\xc8\xb8"
    encoded_args = b""

    data = identifier + encoded_args
    return Instruction(program_id,data,keys)


