'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from construct import Container;
from dataclasses import dataclass;
from solders.instruction import AccountMeta, Instruction;
from solders.pubkey import Pubkey as SolPubkey;
from ..program_id import PROGRAM_ID;
class BeginSwapArgs(typing.TypedDict):
    inMarketIndex:int
    outMarketIndex:int
    amountIn:int


layout = borsh.CStruct(
    "inMarketIndex" /borsh.U16,
    "outMarketIndex" /borsh.U16,
    "amountIn" /borsh.U64,
    )


class BeginSwapAccounts(typing.TypedDict):
    state:SolPubkey
    user:SolPubkey
    userStats:SolPubkey
    authority:SolPubkey
    outSpotMarketVault:SolPubkey
    inSpotMarketVault:SolPubkey
    outTokenAccount:SolPubkey
    inTokenAccount:SolPubkey
    tokenProgram:SolPubkey
    driftSigner:SolPubkey
    instructions:SolPubkey

def BeginSwap(
    args: BeginSwapArgs,
    accounts: BeginSwapAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["state"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["user"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["userStats"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["authority"], is_signer=True, is_writable=False),
    AccountMeta(pubkey=accounts["outSpotMarketVault"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["inSpotMarketVault"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["outTokenAccount"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["inTokenAccount"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["tokenProgram"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["driftSigner"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["instructions"], is_signer=False, is_writable=False),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\xae\x6d\xe4\x01\xf2\x69\xe8\x69"
    encoded_args = layout.build({
        "inMarketIndex":args["inMarketIndex"],
        "outMarketIndex":args["outMarketIndex"],
        "amountIn":args["amountIn"],
       })
    data = identifier + encoded_args
    return Instruction(program_id,data,keys)






