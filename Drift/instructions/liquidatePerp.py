'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from solders.instruction import AccountMeta, Instruction
from solders.pubkey import Pubkey as SolPubkey
from ..program_id import PROGRAM_ID
class LiquidatePerpArgs(typing.TypedDict):
    marketIndex:int
    liquidatorMaxBaseAssetAmount:int
    limitPrice:typing.Optional[int]


layout = borsh.CStruct(
    "marketIndex" /borsh.U16,
    "liquidatorMaxBaseAssetAmount" /borsh.U64,
    "limitPrice" /borsh.Option(borsh.U64),
    )


class LiquidatePerpAccounts(typing.TypedDict):
    state:SolPubkey
    authority:SolPubkey
    liquidator:SolPubkey
    liquidatorStats:SolPubkey
    user:SolPubkey
    userStats:SolPubkey

def LiquidatePerp(
    args: LiquidatePerpArgs,
    accounts: LiquidatePerpAccounts,
    program_id: SolPubkey = PROGRAM_ID,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    AccountMeta(pubkey=accounts["state"], is_signer=False, is_writable=False),
    AccountMeta(pubkey=accounts["authority"], is_signer=True, is_writable=False),
    AccountMeta(pubkey=accounts["liquidator"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["liquidatorStats"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["user"], is_signer=False, is_writable=True),
    AccountMeta(pubkey=accounts["userStats"], is_signer=False, is_writable=True),
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    identifier = b"\x4b\x23\x77\xf7\xbf\x12\x8b\x02"
    encoded_args = layout.build({
        "marketIndex":args["marketIndex"],
        "liquidatorMaxBaseAssetAmount":args["liquidatorMaxBaseAssetAmount"],
        "limitPrice":args["limitPrice"],
       })
    data = identifier + encoded_args
    return Instruction(program_id,data,keys)




