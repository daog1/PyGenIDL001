'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey, EnumForCodegen;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;


class LongJSON(typing.TypedDict):
    kind: typing.Literal["Long"]


@dataclass
class Long:
    discriminator: typing.ClassVar = 0
    def to_json(self) -> LongJSON:
        return LongJSON(
            kind="Long",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Long": {},
        }




class ShortJSON(typing.TypedDict):
    kind: typing.Literal["Short"]


@dataclass
class Short:
    discriminator: typing.ClassVar = 1
    def to_json(self) -> ShortJSON:
        return ShortJSON(
            kind="Short",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Short": {},
        }





PositionDirectionKind = typing.Union[
    Long,
    Short,
]
PositionDirectionJSON = typing.Union[
    LongJSON,
    ShortJSON,
]

def from_decoded(obj: dict) -> PositionDirectionKind:
    if not isinstance(obj, dict):
        raise ValueError("Invalid enum object")
    if "Long" in obj:
      return Long()
    if "Short" in obj:
      return Short()
    raise ValueError("Invalid enum object")

def from_json(obj: PositionDirectionJSON) -> PositionDirectionKind:
    if obj["kind"] == "Long":
        return Long()

    if obj["kind"] == "Short":
        return Short()

    kind = obj["kind"]
    raise ValueError(f"Unrecognized enum kind: {kind}")

layout = EnumForCodegen(
"Long" / borsh.CStruct(),
"Short" / borsh.CStruct(),
)
