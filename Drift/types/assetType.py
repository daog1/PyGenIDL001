'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey, EnumForCodegen;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;


class BaseJSON(typing.TypedDict):
    kind: typing.Literal["Base"]


@dataclass
class Base:
    discriminator: typing.ClassVar = 0
    def to_json(self) -> BaseJSON:
        return BaseJSON(
            kind="Base",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Base": {},
        }




class QuoteJSON(typing.TypedDict):
    kind: typing.Literal["Quote"]


@dataclass
class Quote:
    discriminator: typing.ClassVar = 1
    def to_json(self) -> QuoteJSON:
        return QuoteJSON(
            kind="Quote",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Quote": {},
        }





AssetTypeKind = typing.Union[
    Base,
    Quote,
]
AssetTypeJSON = typing.Union[
    BaseJSON,
    QuoteJSON,
]

def from_decoded(obj: dict) -> AssetTypeKind:
    if not isinstance(obj, dict):
        raise ValueError("Invalid enum object")
    if "Base" in obj:
      return Base()
    if "Quote" in obj:
      return Quote()
    raise ValueError("Invalid enum object")

def from_json(obj: AssetTypeJSON) -> AssetTypeKind:
    if obj["kind"] == "Base":
        return Base()

    if obj["kind"] == "Quote":
        return Quote()

    kind = obj["kind"]
    raise ValueError(f"Unrecognized enum kind: {kind}")

layout = EnumForCodegen(
"Base" / borsh.CStruct(),
"Quote" / borsh.CStruct(),
)
