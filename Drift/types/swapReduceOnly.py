'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey, EnumForCodegen;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey;
from solders.sysvar import RENT;


class InJSON(typing.TypedDict):
    kind: typing.Literal["In"]


@dataclass
class In:
    discriminator: typing.ClassVar = 0
    def to_json(self) -> InJSON:
        return InJSON(
            kind="In",
        )

    def to_encodable(self) -> dict:
        return {
            "In": {},
        }




class OutJSON(typing.TypedDict):
    kind: typing.Literal["Out"]


@dataclass
class Out:
    discriminator: typing.ClassVar = 1
    def to_json(self) -> OutJSON:
        return OutJSON(
            kind="Out",
        )

    def to_encodable(self) -> dict:
        return {
            "Out": {},
        }





SwapReduceOnlyKind = typing.Union[
In,
Out,
]
SwapReduceOnlyJSON = typing.Union[
InJSON,
OutJSON,
]

def from_decoded(obj: dict) -> SwapReduceOnlyKind:
    if not isinstance(obj, dict):
        raise ValueError("Invalid enum object")
    if "In" in obj:
      return In()
    if "Out" in obj:
      return Out()
    raise ValueError("Invalid enum object")

def from_json(obj: SwapReduceOnlyJSON) -> SwapReduceOnlyKind:
    if obj["kind"] == "In":
        return In()

    if obj["kind"] == "Out":
        return Out()

    kind = obj["kind"]
    raise ValueError(f"Unrecognized enum kind: {kind}")

layout = EnumForCodegen(
"In" / borsh.CStruct(),
"Out" / borsh.CStruct(),
)
