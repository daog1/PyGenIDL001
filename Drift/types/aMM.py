'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey;
from solders.sysvar import RENT;
from . import historicalOracleData, oracleSource, poolBalance;

class AMMJSON(typing.TypedDict):
    oracle: str
    historicalOracleData: historicalOracleData.HistoricalOracleDataJSON
    baseAssetAmountPerLp: int
    quoteAssetAmountPerLp: int
    feePool: poolBalance.PoolBalanceJSON
    baseAssetReserve: int
    quoteAssetReserve: int
    concentrationCoef: int
    minBaseAssetReserve: int
    maxBaseAssetReserve: int
    sqrtK: int
    pegMultiplier: int
    terminalQuoteAssetReserve: int
    baseAssetAmountLong: int
    baseAssetAmountShort: int
    baseAssetAmountWithAmm: int
    baseAssetAmountWithUnsettledLp: int
    maxOpenInterest: int
    quoteAssetAmount: int
    quoteEntryAmountLong: int
    quoteEntryAmountShort: int
    quoteBreakEvenAmountLong: int
    quoteBreakEvenAmountShort: int
    userLpShares: int
    lastFundingRate: int
    lastFundingRateLong: int
    lastFundingRateShort: int
    last24hAvgFundingRate: int
    totalFee: int
    totalMmFee: int
    totalExchangeFee: int
    totalFeeMinusDistributions: int
    totalFeeWithdrawn: int
    totalLiquidationFee: int
    cumulativeFundingRateLong: int
    cumulativeFundingRateShort: int
    totalSocialLoss: int
    askBaseAssetReserve: int
    askQuoteAssetReserve: int
    bidBaseAssetReserve: int
    bidQuoteAssetReserve: int
    lastOracleNormalisedPrice: int
    lastOracleReservePriceSpreadPct: int
    lastBidPriceTwap: int
    lastAskPriceTwap: int
    lastMarkPriceTwap: int
    lastMarkPriceTwap5min: int
    lastUpdateSlot: int
    lastOracleConfPct: int
    netRevenueSinceLastFunding: int
    lastFundingRateTs: int
    fundingPeriod: int
    orderStepSize: int
    orderTickSize: int
    minOrderSize: int
    maxPositionSize: int
    volume24h: int
    longIntensityVolume: int
    shortIntensityVolume: int
    lastTradeTs: int
    markStd: int
    oracleStd: int
    lastMarkPriceTwapTs: int
    baseSpread: int
    maxSpread: int
    longSpread: int
    shortSpread: int
    longIntensityCount: int
    shortIntensityCount: int
    maxFillReserveFraction: int
    maxSlippageRatio: int
    curveUpdateIntensity: int
    ammJitIntensity: int
    oracleSource: 
    lastOracleValid: bool
    targetBaseAssetAmountPerLp: int
    perLpBase: int
    padding1: int
    padding2: int
    totalFeeEarnedPerLp: int
    netUnsettledFundingPnl: int
    quoteAssetAmountWithUnsettledLp: int
    referencePriceOffset: int
    padding: list[int]

@dataclass
class AMM:
    layout: typing.ClassVar = borsh.CStruct(
        "oracle" /BorshPubkey,
        "historicalOracleData" /historicalOracleData.HistoricalOracleData.layout,
        "baseAssetAmountPerLp" /borsh.I128,
        "quoteAssetAmountPerLp" /borsh.I128,
        "feePool" /poolBalance.PoolBalance.layout,
        "baseAssetReserve" /borsh.U128,
        "quoteAssetReserve" /borsh.U128,
        "concentrationCoef" /borsh.U128,
        "minBaseAssetReserve" /borsh.U128,
        "maxBaseAssetReserve" /borsh.U128,
        "sqrtK" /borsh.U128,
        "pegMultiplier" /borsh.U128,
        "terminalQuoteAssetReserve" /borsh.U128,
        "baseAssetAmountLong" /borsh.I128,
        "baseAssetAmountShort" /borsh.I128,
        "baseAssetAmountWithAmm" /borsh.I128,
        "baseAssetAmountWithUnsettledLp" /borsh.I128,
        "maxOpenInterest" /borsh.U128,
        "quoteAssetAmount" /borsh.I128,
        "quoteEntryAmountLong" /borsh.I128,
        "quoteEntryAmountShort" /borsh.I128,
        "quoteBreakEvenAmountLong" /borsh.I128,
        "quoteBreakEvenAmountShort" /borsh.I128,
        "userLpShares" /borsh.U128,
        "lastFundingRate" /borsh.I64,
        "lastFundingRateLong" /borsh.I64,
        "lastFundingRateShort" /borsh.I64,
        "last24hAvgFundingRate" /borsh.I64,
        "totalFee" /borsh.I128,
        "totalMmFee" /borsh.I128,
        "totalExchangeFee" /borsh.U128,
        "totalFeeMinusDistributions" /borsh.I128,
        "totalFeeWithdrawn" /borsh.U128,
        "totalLiquidationFee" /borsh.U128,
        "cumulativeFundingRateLong" /borsh.I128,
        "cumulativeFundingRateShort" /borsh.I128,
        "totalSocialLoss" /borsh.U128,
        "askBaseAssetReserve" /borsh.U128,
        "askQuoteAssetReserve" /borsh.U128,
        "bidBaseAssetReserve" /borsh.U128,
        "bidQuoteAssetReserve" /borsh.U128,
        "lastOracleNormalisedPrice" /borsh.I64,
        "lastOracleReservePriceSpreadPct" /borsh.I64,
        "lastBidPriceTwap" /borsh.U64,
        "lastAskPriceTwap" /borsh.U64,
        "lastMarkPriceTwap" /borsh.U64,
        "lastMarkPriceTwap5min" /borsh.U64,
        "lastUpdateSlot" /borsh.U64,
        "lastOracleConfPct" /borsh.U64,
        "netRevenueSinceLastFunding" /borsh.I64,
        "lastFundingRateTs" /borsh.I64,
        "fundingPeriod" /borsh.I64,
        "orderStepSize" /borsh.U64,
        "orderTickSize" /borsh.U64,
        "minOrderSize" /borsh.U64,
        "maxPositionSize" /borsh.U64,
        "volume24h" /borsh.U64,
        "longIntensityVolume" /borsh.U64,
        "shortIntensityVolume" /borsh.U64,
        "lastTradeTs" /borsh.I64,
        "markStd" /borsh.U64,
        "oracleStd" /borsh.U64,
        "lastMarkPriceTwapTs" /borsh.I64,
        "baseSpread" /borsh.U32,
        "maxSpread" /borsh.U32,
        "longSpread" /borsh.U32,
        "shortSpread" /borsh.U32,
        "longIntensityCount" /borsh.U32,
        "shortIntensityCount" /borsh.U32,
        "maxFillReserveFraction" /borsh.U16,
        "maxSlippageRatio" /borsh.U16,
        "curveUpdateIntensity" /borsh.U8,
        "ammJitIntensity" /borsh.U8,
        "oracleSource" /oracleSource.layout,
        "lastOracleValid" /borsh.U8,
        "targetBaseAssetAmountPerLp" /borsh.I32,
        "perLpBase" /borsh.I8,
        "padding1" /borsh.U8,
        "padding2" /borsh.U16,
        "totalFeeEarnedPerLp" /borsh.U64,
        "netUnsettledFundingPnl" /borsh.I64,
        "quoteAssetAmountWithUnsettledLp" /borsh.I64,
        "referencePriceOffset" /borsh.I32,
        "padding" /borsh.U8[12],
        )
    #fields
    oracle: Pubkey
    historicalOracleData: historicalOracleData.HistoricalOracleData
    baseAssetAmountPerLp: int
    quoteAssetAmountPerLp: int
    feePool: poolBalance.PoolBalance
    baseAssetReserve: int
    quoteAssetReserve: int
    concentrationCoef: int
    minBaseAssetReserve: int
    maxBaseAssetReserve: int
    sqrtK: int
    pegMultiplier: int
    terminalQuoteAssetReserve: int
    baseAssetAmountLong: int
    baseAssetAmountShort: int
    baseAssetAmountWithAmm: int
    baseAssetAmountWithUnsettledLp: int
    maxOpenInterest: int
    quoteAssetAmount: int
    quoteEntryAmountLong: int
    quoteEntryAmountShort: int
    quoteBreakEvenAmountLong: int
    quoteBreakEvenAmountShort: int
    userLpShares: int
    lastFundingRate: int
    lastFundingRateLong: int
    lastFundingRateShort: int
    last24hAvgFundingRate: int
    totalFee: int
    totalMmFee: int
    totalExchangeFee: int
    totalFeeMinusDistributions: int
    totalFeeWithdrawn: int
    totalLiquidationFee: int
    cumulativeFundingRateLong: int
    cumulativeFundingRateShort: int
    totalSocialLoss: int
    askBaseAssetReserve: int
    askQuoteAssetReserve: int
    bidBaseAssetReserve: int
    bidQuoteAssetReserve: int
    lastOracleNormalisedPrice: int
    lastOracleReservePriceSpreadPct: int
    lastBidPriceTwap: int
    lastAskPriceTwap: int
    lastMarkPriceTwap: int
    lastMarkPriceTwap5min: int
    lastUpdateSlot: int
    lastOracleConfPct: int
    netRevenueSinceLastFunding: int
    lastFundingRateTs: int
    fundingPeriod: int
    orderStepSize: int
    orderTickSize: int
    minOrderSize: int
    maxPositionSize: int
    volume24h: int
    longIntensityVolume: int
    shortIntensityVolume: int
    lastTradeTs: int
    markStd: int
    oracleStd: int
    lastMarkPriceTwapTs: int
    baseSpread: int
    maxSpread: int
    longSpread: int
    shortSpread: int
    longIntensityCount: int
    shortIntensityCount: int
    maxFillReserveFraction: int
    maxSlippageRatio: int
    curveUpdateIntensity: int
    ammJitIntensity: int
    oracleSource: oracleSource.OracleSourceKind
    lastOracleValid: bool
    targetBaseAssetAmountPerLp: int
    perLpBase: int
    padding1: int
    padding2: int
    totalFeeEarnedPerLp: int
    netUnsettledFundingPnl: int
    quoteAssetAmountWithUnsettledLp: int
    referencePriceOffset: int
    padding: list[int]
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "AMM":
        return cls(
                   oracle=obj.oracle,
                   historicalOracleData=obj.historicalOracleData,
                   baseAssetAmountPerLp=obj.baseAssetAmountPerLp,
                   quoteAssetAmountPerLp=obj.quoteAssetAmountPerLp,
                   feePool=obj.feePool,
                   baseAssetReserve=obj.baseAssetReserve,
                   quoteAssetReserve=obj.quoteAssetReserve,
                   concentrationCoef=obj.concentrationCoef,
                   minBaseAssetReserve=obj.minBaseAssetReserve,
                   maxBaseAssetReserve=obj.maxBaseAssetReserve,
                   sqrtK=obj.sqrtK,
                   pegMultiplier=obj.pegMultiplier,
                   terminalQuoteAssetReserve=obj.terminalQuoteAssetReserve,
                   baseAssetAmountLong=obj.baseAssetAmountLong,
                   baseAssetAmountShort=obj.baseAssetAmountShort,
                   baseAssetAmountWithAmm=obj.baseAssetAmountWithAmm,
                   baseAssetAmountWithUnsettledLp=obj.baseAssetAmountWithUnsettledLp,
                   maxOpenInterest=obj.maxOpenInterest,
                   quoteAssetAmount=obj.quoteAssetAmount,
                   quoteEntryAmountLong=obj.quoteEntryAmountLong,
                   quoteEntryAmountShort=obj.quoteEntryAmountShort,
                   quoteBreakEvenAmountLong=obj.quoteBreakEvenAmountLong,
                   quoteBreakEvenAmountShort=obj.quoteBreakEvenAmountShort,
                   userLpShares=obj.userLpShares,
                   lastFundingRate=obj.lastFundingRate,
                   lastFundingRateLong=obj.lastFundingRateLong,
                   lastFundingRateShort=obj.lastFundingRateShort,
                   last24hAvgFundingRate=obj.last24hAvgFundingRate,
                   totalFee=obj.totalFee,
                   totalMmFee=obj.totalMmFee,
                   totalExchangeFee=obj.totalExchangeFee,
                   totalFeeMinusDistributions=obj.totalFeeMinusDistributions,
                   totalFeeWithdrawn=obj.totalFeeWithdrawn,
                   totalLiquidationFee=obj.totalLiquidationFee,
                   cumulativeFundingRateLong=obj.cumulativeFundingRateLong,
                   cumulativeFundingRateShort=obj.cumulativeFundingRateShort,
                   totalSocialLoss=obj.totalSocialLoss,
                   askBaseAssetReserve=obj.askBaseAssetReserve,
                   askQuoteAssetReserve=obj.askQuoteAssetReserve,
                   bidBaseAssetReserve=obj.bidBaseAssetReserve,
                   bidQuoteAssetReserve=obj.bidQuoteAssetReserve,
                   lastOracleNormalisedPrice=obj.lastOracleNormalisedPrice,
                   lastOracleReservePriceSpreadPct=obj.lastOracleReservePriceSpreadPct,
                   lastBidPriceTwap=obj.lastBidPriceTwap,
                   lastAskPriceTwap=obj.lastAskPriceTwap,
                   lastMarkPriceTwap=obj.lastMarkPriceTwap,
                   lastMarkPriceTwap5min=obj.lastMarkPriceTwap5min,
                   lastUpdateSlot=obj.lastUpdateSlot,
                   lastOracleConfPct=obj.lastOracleConfPct,
                   netRevenueSinceLastFunding=obj.netRevenueSinceLastFunding,
                   lastFundingRateTs=obj.lastFundingRateTs,
                   fundingPeriod=obj.fundingPeriod,
                   orderStepSize=obj.orderStepSize,
                   orderTickSize=obj.orderTickSize,
                   minOrderSize=obj.minOrderSize,
                   maxPositionSize=obj.maxPositionSize,
                   volume24h=obj.volume24h,
                   longIntensityVolume=obj.longIntensityVolume,
                   shortIntensityVolume=obj.shortIntensityVolume,
                   lastTradeTs=obj.lastTradeTs,
                   markStd=obj.markStd,
                   oracleStd=obj.oracleStd,
                   lastMarkPriceTwapTs=obj.lastMarkPriceTwapTs,
                   baseSpread=obj.baseSpread,
                   maxSpread=obj.maxSpread,
                   longSpread=obj.longSpread,
                   shortSpread=obj.shortSpread,
                   longIntensityCount=obj.longIntensityCount,
                   shortIntensityCount=obj.shortIntensityCount,
                   maxFillReserveFraction=obj.maxFillReserveFraction,
                   maxSlippageRatio=obj.maxSlippageRatio,
                   curveUpdateIntensity=obj.curveUpdateIntensity,
                   ammJitIntensity=obj.ammJitIntensity,
                   oracleSource=obj.oracleSource,
                   lastOracleValid=obj.lastOracleValid,
                   targetBaseAssetAmountPerLp=obj.targetBaseAssetAmountPerLp,
                   perLpBase=obj.perLpBase,
                   padding1=obj.padding1,
                   padding2=obj.padding2,
                   totalFeeEarnedPerLp=obj.totalFeeEarnedPerLp,
                   netUnsettledFundingPnl=obj.netUnsettledFundingPnl,
                   quoteAssetAmountWithUnsettledLp=obj.quoteAssetAmountWithUnsettledLp,
                   referencePriceOffset=obj.referencePriceOffset,
                   padding=obj.padding,
                )

    #def to_encodable(self) -> dict[str, typing.Any]:
    #    return {"row": self.row, "column": self.column}

    def to_json(self) -> AMMJSON:
        return {
                "oracle": str(self.oracle),
                "historicalOracleData": self.historicalOracleData.to_json(),
                "baseAssetAmountPerLp": self.baseAssetAmountPerLp,
                "quoteAssetAmountPerLp": self.quoteAssetAmountPerLp,
                "feePool": self.feePool.to_json(),
                "baseAssetReserve": self.baseAssetReserve,
                "quoteAssetReserve": self.quoteAssetReserve,
                "concentrationCoef": self.concentrationCoef,
                "minBaseAssetReserve": self.minBaseAssetReserve,
                "maxBaseAssetReserve": self.maxBaseAssetReserve,
                "sqrtK": self.sqrtK,
                "pegMultiplier": self.pegMultiplier,
                "terminalQuoteAssetReserve": self.terminalQuoteAssetReserve,
                "baseAssetAmountLong": self.baseAssetAmountLong,
                "baseAssetAmountShort": self.baseAssetAmountShort,
                "baseAssetAmountWithAmm": self.baseAssetAmountWithAmm,
                "baseAssetAmountWithUnsettledLp": self.baseAssetAmountWithUnsettledLp,
                "maxOpenInterest": self.maxOpenInterest,
                "quoteAssetAmount": self.quoteAssetAmount,
                "quoteEntryAmountLong": self.quoteEntryAmountLong,
                "quoteEntryAmountShort": self.quoteEntryAmountShort,
                "quoteBreakEvenAmountLong": self.quoteBreakEvenAmountLong,
                "quoteBreakEvenAmountShort": self.quoteBreakEvenAmountShort,
                "userLpShares": self.userLpShares,
                "lastFundingRate": self.lastFundingRate,
                "lastFundingRateLong": self.lastFundingRateLong,
                "lastFundingRateShort": self.lastFundingRateShort,
                "last24hAvgFundingRate": self.last24hAvgFundingRate,
                "totalFee": self.totalFee,
                "totalMmFee": self.totalMmFee,
                "totalExchangeFee": self.totalExchangeFee,
                "totalFeeMinusDistributions": self.totalFeeMinusDistributions,
                "totalFeeWithdrawn": self.totalFeeWithdrawn,
                "totalLiquidationFee": self.totalLiquidationFee,
                "cumulativeFundingRateLong": self.cumulativeFundingRateLong,
                "cumulativeFundingRateShort": self.cumulativeFundingRateShort,
                "totalSocialLoss": self.totalSocialLoss,
                "askBaseAssetReserve": self.askBaseAssetReserve,
                "askQuoteAssetReserve": self.askQuoteAssetReserve,
                "bidBaseAssetReserve": self.bidBaseAssetReserve,
                "bidQuoteAssetReserve": self.bidQuoteAssetReserve,
                "lastOracleNormalisedPrice": self.lastOracleNormalisedPrice,
                "lastOracleReservePriceSpreadPct": self.lastOracleReservePriceSpreadPct,
                "lastBidPriceTwap": self.lastBidPriceTwap,
                "lastAskPriceTwap": self.lastAskPriceTwap,
                "lastMarkPriceTwap": self.lastMarkPriceTwap,
                "lastMarkPriceTwap5min": self.lastMarkPriceTwap5min,
                "lastUpdateSlot": self.lastUpdateSlot,
                "lastOracleConfPct": self.lastOracleConfPct,
                "netRevenueSinceLastFunding": self.netRevenueSinceLastFunding,
                "lastFundingRateTs": self.lastFundingRateTs,
                "fundingPeriod": self.fundingPeriod,
                "orderStepSize": self.orderStepSize,
                "orderTickSize": self.orderTickSize,
                "minOrderSize": self.minOrderSize,
                "maxPositionSize": self.maxPositionSize,
                "volume24h": self.volume24h,
                "longIntensityVolume": self.longIntensityVolume,
                "shortIntensityVolume": self.shortIntensityVolume,
                "lastTradeTs": self.lastTradeTs,
                "markStd": self.markStd,
                "oracleStd": self.oracleStd,
                "lastMarkPriceTwapTs": self.lastMarkPriceTwapTs,
                "baseSpread": self.baseSpread,
                "maxSpread": self.maxSpread,
                "longSpread": self.longSpread,
                "shortSpread": self.shortSpread,
                "longIntensityCount": self.longIntensityCount,
                "shortIntensityCount": self.shortIntensityCount,
                "maxFillReserveFraction": self.maxFillReserveFraction,
                "maxSlippageRatio": self.maxSlippageRatio,
                "curveUpdateIntensity": self.curveUpdateIntensity,
                "ammJitIntensity": self.ammJitIntensity,
                "oracleSource": self.oracleSource.to_json(),
                "lastOracleValid": self.lastOracleValid,
                "targetBaseAssetAmountPerLp": self.targetBaseAssetAmountPerLp,
                "perLpBase": self.perLpBase,
                "padding1": self.padding1,
                "padding2": self.padding2,
                "totalFeeEarnedPerLp": self.totalFeeEarnedPerLp,
                "netUnsettledFundingPnl": self.netUnsettledFundingPnl,
                "quoteAssetAmountWithUnsettledLp": self.quoteAssetAmountWithUnsettledLp,
                "referencePriceOffset": self.referencePriceOffset,
                "padding": self.padding,
        }

    @classmethod
    def from_json(cls, obj: AMMJSON) -> "AMM":
        return cls(
                oracle=Pubkey.from_string(obj["oracle"]),
                historicalOracleData=historicalOracleData.HistoricalOracleData.from_json(obj["historicalOracleData"]),
                baseAssetAmountPerLp=obj["baseAssetAmountPerLp"],
                quoteAssetAmountPerLp=obj["quoteAssetAmountPerLp"],
                feePool=poolBalance.PoolBalance.from_json(obj["feePool"]),
                baseAssetReserve=obj["baseAssetReserve"],
                quoteAssetReserve=obj["quoteAssetReserve"],
                concentrationCoef=obj["concentrationCoef"],
                minBaseAssetReserve=obj["minBaseAssetReserve"],
                maxBaseAssetReserve=obj["maxBaseAssetReserve"],
                sqrtK=obj["sqrtK"],
                pegMultiplier=obj["pegMultiplier"],
                terminalQuoteAssetReserve=obj["terminalQuoteAssetReserve"],
                baseAssetAmountLong=obj["baseAssetAmountLong"],
                baseAssetAmountShort=obj["baseAssetAmountShort"],
                baseAssetAmountWithAmm=obj["baseAssetAmountWithAmm"],
                baseAssetAmountWithUnsettledLp=obj["baseAssetAmountWithUnsettledLp"],
                maxOpenInterest=obj["maxOpenInterest"],
                quoteAssetAmount=obj["quoteAssetAmount"],
                quoteEntryAmountLong=obj["quoteEntryAmountLong"],
                quoteEntryAmountShort=obj["quoteEntryAmountShort"],
                quoteBreakEvenAmountLong=obj["quoteBreakEvenAmountLong"],
                quoteBreakEvenAmountShort=obj["quoteBreakEvenAmountShort"],
                userLpShares=obj["userLpShares"],
                lastFundingRate=obj["lastFundingRate"],
                lastFundingRateLong=obj["lastFundingRateLong"],
                lastFundingRateShort=obj["lastFundingRateShort"],
                last24hAvgFundingRate=obj["last24hAvgFundingRate"],
                totalFee=obj["totalFee"],
                totalMmFee=obj["totalMmFee"],
                totalExchangeFee=obj["totalExchangeFee"],
                totalFeeMinusDistributions=obj["totalFeeMinusDistributions"],
                totalFeeWithdrawn=obj["totalFeeWithdrawn"],
                totalLiquidationFee=obj["totalLiquidationFee"],
                cumulativeFundingRateLong=obj["cumulativeFundingRateLong"],
                cumulativeFundingRateShort=obj["cumulativeFundingRateShort"],
                totalSocialLoss=obj["totalSocialLoss"],
                askBaseAssetReserve=obj["askBaseAssetReserve"],
                askQuoteAssetReserve=obj["askQuoteAssetReserve"],
                bidBaseAssetReserve=obj["bidBaseAssetReserve"],
                bidQuoteAssetReserve=obj["bidQuoteAssetReserve"],
                lastOracleNormalisedPrice=obj["lastOracleNormalisedPrice"],
                lastOracleReservePriceSpreadPct=obj["lastOracleReservePriceSpreadPct"],
                lastBidPriceTwap=obj["lastBidPriceTwap"],
                lastAskPriceTwap=obj["lastAskPriceTwap"],
                lastMarkPriceTwap=obj["lastMarkPriceTwap"],
                lastMarkPriceTwap5min=obj["lastMarkPriceTwap5min"],
                lastUpdateSlot=obj["lastUpdateSlot"],
                lastOracleConfPct=obj["lastOracleConfPct"],
                netRevenueSinceLastFunding=obj["netRevenueSinceLastFunding"],
                lastFundingRateTs=obj["lastFundingRateTs"],
                fundingPeriod=obj["fundingPeriod"],
                orderStepSize=obj["orderStepSize"],
                orderTickSize=obj["orderTickSize"],
                minOrderSize=obj["minOrderSize"],
                maxPositionSize=obj["maxPositionSize"],
                volume24h=obj["volume24h"],
                longIntensityVolume=obj["longIntensityVolume"],
                shortIntensityVolume=obj["shortIntensityVolume"],
                lastTradeTs=obj["lastTradeTs"],
                markStd=obj["markStd"],
                oracleStd=obj["oracleStd"],
                lastMarkPriceTwapTs=obj["lastMarkPriceTwapTs"],
                baseSpread=obj["baseSpread"],
                maxSpread=obj["maxSpread"],
                longSpread=obj["longSpread"],
                shortSpread=obj["shortSpread"],
                longIntensityCount=obj["longIntensityCount"],
                shortIntensityCount=obj["shortIntensityCount"],
                maxFillReserveFraction=obj["maxFillReserveFraction"],
                maxSlippageRatio=obj["maxSlippageRatio"],
                curveUpdateIntensity=obj["curveUpdateIntensity"],
                ammJitIntensity=obj["ammJitIntensity"],
                oracleSource=oracleSource.from_json(obj["oracleSource"]),
                lastOracleValid=obj["lastOracleValid"],
                targetBaseAssetAmountPerLp=obj["targetBaseAssetAmountPerLp"],
                perLpBase=obj["perLpBase"],
                padding1=obj["padding1"],
                padding2=obj["padding2"],
                totalFeeEarnedPerLp=obj["totalFeeEarnedPerLp"],
                netUnsettledFundingPnl=obj["netUnsettledFundingPnl"],
                quoteAssetAmountWithUnsettledLp=obj["quoteAssetAmountWithUnsettledLp"],
                referencePriceOffset=obj["referencePriceOffset"],
                padding=obj["padding"],
        )






