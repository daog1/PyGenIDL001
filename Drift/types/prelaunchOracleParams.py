'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;

class PrelaunchOracleParamsJSON(typing.TypedDict):
    perpMarketIndex: int
    price: typing.Optional[int]
    maxPrice: typing.Optional[int]

@dataclass
class PrelaunchOracleParams:
    layout: typing.ClassVar = borsh.CStruct(
        "perpMarketIndex" /borsh.U16,
        "price" /borsh.Option(borsh.I64),
        "maxPrice" /borsh.Option(borsh.I64),
        )
    #fields
    perpMarketIndex: int
    price: typing.Optional[int]
    maxPrice: typing.Optional[int]
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "PrelaunchOracleParams":
        return cls(
        perpMarketIndex=obj["perpMarketIndex"],
        price=(None if obj["price"] is None else obj["price"]),
        maxPrice=(None if obj["maxPrice"] is None else obj["maxPrice"]),
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "perpMarketIndex": self.perpMarketIndex,
                "price": self.price,
                "maxPrice": self.maxPrice,
                }

    def to_json(self) -> PrelaunchOracleParamsJSON:
        return {
                "perpMarketIndex": self.perpMarketIndex,
                "price": (None if self.price is None else self.price),
                "maxPrice": (None if self.maxPrice is None else self.maxPrice),
                }

    @classmethod
    def from_json(cls, obj: PrelaunchOracleParamsJSON) -> "PrelaunchOracleParams":
        return cls(
                perpMarketIndex=obj["perpMarketIndex"],
                price=(None if obj["price"] is None else obj["price"]),
                maxPrice=(None if obj["maxPrice"] is None else obj["maxPrice"]),
        )






