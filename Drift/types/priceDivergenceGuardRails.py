'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey;
from solders.sysvar import RENT;

class PriceDivergenceGuardRailsJSON(typing.TypedDict):
    markOraclePercentDivergence: int
    oracleTwap5minPercentDivergence: int

@dataclass
class PriceDivergenceGuardRails:
    layout: typing.ClassVar = borsh.CStruct(
        "markOraclePercentDivergence" /borsh.U64,
        "oracleTwap5minPercentDivergence" /borsh.U64,
        )
    #fields
    markOraclePercentDivergence: int
    oracleTwap5minPercentDivergence: int
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "PriceDivergenceGuardRails":
        return cls(
       markOraclePercentDivergence=obj["markOraclePercentDivergence"],oracleTwap5minPercentDivergence=obj["oracleTwap5minPercentDivergence"]
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "markOraclePercentDivergence": self.markOraclePercentDivergence,
                "oracleTwap5minPercentDivergence": self.oracleTwap5minPercentDivergence,
                }

    def to_json(self) -> PriceDivergenceGuardRailsJSON:
        return {
                "markOraclePercentDivergence": self.markOraclePercentDivergence,
                "oracleTwap5minPercentDivergence": self.oracleTwap5minPercentDivergence,
                }

    @classmethod
    def from_json(cls, obj: PriceDivergenceGuardRailsJSON) -> "PriceDivergenceGuardRails":
        return cls(
                markOraclePercentDivergence=obj["markOraclePercentDivergence"],
                oracleTwap5minPercentDivergence=obj["oracleTwap5minPercentDivergence"],
        )






