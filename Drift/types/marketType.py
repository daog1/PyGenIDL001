'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey, EnumForCodegen;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;
from solders.sysvar import RENT;


class SpotJSON(typing.TypedDict):
    kind: typing.Literal["Spot"]


@dataclass
class Spot:
    discriminator: typing.ClassVar = 0
    def to_json(self) -> SpotJSON:
        return SpotJSON(
            kind="Spot",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Spot": {},
        }




class PerpJSON(typing.TypedDict):
    kind: typing.Literal["Perp"]


@dataclass
class Perp:
    discriminator: typing.ClassVar = 1
    def to_json(self) -> PerpJSON:
        return PerpJSON(
            kind="Perp",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Perp": {},
        }





MarketTypeKind = typing.Union[
    Spot,
    Perp,
]
MarketTypeJSON = typing.Union[
    SpotJSON,
    PerpJSON,
]

def from_decoded(obj: dict) -> MarketTypeKind:
    if not isinstance(obj, dict):
        raise ValueError("Invalid enum object")
    if "Spot" in obj:
      return Spot()
    if "Perp" in obj:
      return Perp()
    raise ValueError("Invalid enum object")

def from_json(obj: MarketTypeJSON) -> MarketTypeKind:
    if obj["kind"] == "Spot":
        return Spot()

    if obj["kind"] == "Perp":
        return Perp()

    kind = obj["kind"]
    raise ValueError(f"Unrecognized enum kind: {kind}")

layout = EnumForCodegen(
"Spot" / borsh.CStruct(),
"Perp" / borsh.CStruct(),
)
