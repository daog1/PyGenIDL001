'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey;
from solders.sysvar import RENT;

class SwiftTriggerOrderParamsJSON(typing.TypedDict):
    triggerPrice: int
    baseAssetAmount: int

@dataclass
class SwiftTriggerOrderParams:
    layout: typing.ClassVar = borsh.CStruct(
        "triggerPrice" /borsh.U64,
        "baseAssetAmount" /borsh.U64,
        )
    #fields
    triggerPrice: int
    baseAssetAmount: int
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "SwiftTriggerOrderParams":
        return cls(
                   triggerPrice=obj.triggerPrice,
                   baseAssetAmount=obj.baseAssetAmount,
                )

    #def to_encodable(self) -> dict[str, typing.Any]:
    #    return {"row": self.row, "column": self.column}

    def to_json(self) -> SwiftTriggerOrderParamsJSON:
        return {
                "triggerPrice": self.triggerPrice,
                "baseAssetAmount": self.baseAssetAmount,
        }

    @classmethod
    def from_json(cls, obj: SwiftTriggerOrderParamsJSON) -> "SwiftTriggerOrderParams":
        return cls(
                triggerPrice=obj["triggerPrice"],
                baseAssetAmount=obj["baseAssetAmount"],
        )






