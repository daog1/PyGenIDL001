'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey;
from solders.sysvar import RENT;

class FeeTierJSON(typing.TypedDict):
    feeNumerator: int
    feeDenominator: int
    makerRebateNumerator: int
    makerRebateDenominator: int
    referrerRewardNumerator: int
    referrerRewardDenominator: int
    refereeFeeNumerator: int
    refereeFeeDenominator: int

@dataclass
class FeeTier:
    layout: typing.ClassVar = borsh.CStruct(
        "feeNumerator" /borsh.U32,
        "feeDenominator" /borsh.U32,
        "makerRebateNumerator" /borsh.U32,
        "makerRebateDenominator" /borsh.U32,
        "referrerRewardNumerator" /borsh.U32,
        "referrerRewardDenominator" /borsh.U32,
        "refereeFeeNumerator" /borsh.U32,
        "refereeFeeDenominator" /borsh.U32,
        )
    #fields
    feeNumerator: int
    feeDenominator: int
    makerRebateNumerator: int
    makerRebateDenominator: int
    referrerRewardNumerator: int
    referrerRewardDenominator: int
    refereeFeeNumerator: int
    refereeFeeDenominator: int
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "FeeTier":
        return cls(
       feeNumerator=obj["feeNumerator"],feeDenominator=obj["feeDenominator"],makerRebateNumerator=obj["makerRebateNumerator"],makerRebateDenominator=obj["makerRebateDenominator"],referrerRewardNumerator=obj["referrerRewardNumerator"],referrerRewardDenominator=obj["referrerRewardDenominator"],refereeFeeNumerator=obj["refereeFeeNumerator"],refereeFeeDenominator=obj["refereeFeeDenominator"]
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "feeNumerator": self.feeNumerator,
                "feeDenominator": self.feeDenominator,
                "makerRebateNumerator": self.makerRebateNumerator,
                "makerRebateDenominator": self.makerRebateDenominator,
                "referrerRewardNumerator": self.referrerRewardNumerator,
                "referrerRewardDenominator": self.referrerRewardDenominator,
                "refereeFeeNumerator": self.refereeFeeNumerator,
                "refereeFeeDenominator": self.refereeFeeDenominator,
                }

    def to_json(self) -> FeeTierJSON:
        return {
                "feeNumerator": self.feeNumerator,
                "feeDenominator": self.feeDenominator,
                "makerRebateNumerator": self.makerRebateNumerator,
                "makerRebateDenominator": self.makerRebateDenominator,
                "referrerRewardNumerator": self.referrerRewardNumerator,
                "referrerRewardDenominator": self.referrerRewardDenominator,
                "refereeFeeNumerator": self.refereeFeeNumerator,
                "refereeFeeDenominator": self.refereeFeeDenominator,
                }

    @classmethod
    def from_json(cls, obj: FeeTierJSON) -> "FeeTier":
        return cls(
                feeNumerator=obj["feeNumerator"],
                feeDenominator=obj["feeDenominator"],
                makerRebateNumerator=obj["makerRebateNumerator"],
                makerRebateDenominator=obj["makerRebateDenominator"],
                referrerRewardNumerator=obj["referrerRewardNumerator"],
                referrerRewardDenominator=obj["referrerRewardDenominator"],
                refereeFeeNumerator=obj["refereeFeeNumerator"],
                refereeFeeDenominator=obj["refereeFeeDenominator"],
        )






