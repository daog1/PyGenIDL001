'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey, EnumForCodegen;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;
from solders.sysvar import RENT;


class AddJSON(typing.TypedDict):
    kind: typing.Literal["Add"]


@dataclass
class Add:
    discriminator: typing.ClassVar = 0
    def to_json(self) -> AddJSON:
        return AddJSON(
            kind="Add",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Add": {},
        }




class RemoveJSON(typing.TypedDict):
    kind: typing.Literal["Remove"]


@dataclass
class Remove:
    discriminator: typing.ClassVar = 1
    def to_json(self) -> RemoveJSON:
        return RemoveJSON(
            kind="Remove",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Remove": {},
        }





SwapDirectionKind = typing.Union[
    Add,
    Remove,
]
SwapDirectionJSON = typing.Union[
    AddJSON,
    RemoveJSON,
]

def from_decoded(obj: dict) -> SwapDirectionKind:
    if not isinstance(obj, dict):
        raise ValueError("Invalid enum object")
    if "Add" in obj:
      return Add()
    if "Remove" in obj:
      return Remove()
    raise ValueError("Invalid enum object")

def from_json(obj: SwapDirectionJSON) -> SwapDirectionKind:
    if obj["kind"] == "Add":
        return Add()

    if obj["kind"] == "Remove":
        return Remove()

    kind = obj["kind"]
    raise ValueError(f"Unrecognized enum kind: {kind}")

layout = EnumForCodegen(
"Add" / borsh.CStruct(),
"Remove" / borsh.CStruct(),
)
