'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;
from solders.sysvar import RENT;
from . import rFQMakerOrderParams;

class RFQMakerMessageJSON(typing.TypedDict):
    orderParams: rFQMakerOrderParams.RFQMakerOrderParamsJSON
    signature: list[int]

@dataclass
class RFQMakerMessage:
    layout: typing.ClassVar = borsh.CStruct(
        "orderParams" /rFQMakerOrderParams.RFQMakerOrderParams.layout,
        "signature" /borsh.U8[64],
        )
    #fields
    orderParams: rFQMakerOrderParams.RFQMakerOrderParams
    signature: list[int]
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "RFQMakerMessage":
        return cls(
        orderParams=rFQMakerOrderParams.RFQMakerOrderParams.from_decoded(obj["orderParams"]),
        signature=obj["signature"],
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "orderParams": self.orderParams.to_encodable(),
                "signature": self.signature,
                }

    def to_json(self) -> RFQMakerMessageJSON:
        return {
                "orderParams": self.orderParams.to_json(),
                "signature": self.signature,
                }

    @classmethod
    def from_json(cls, obj: RFQMakerMessageJSON) -> "RFQMakerMessage":
        return cls(
                orderParams=rFQMakerOrderParams.RFQMakerOrderParams.from_json(obj["orderParams"]),
                signature=obj["signature"],
        )






