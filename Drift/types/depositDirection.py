'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey, EnumForCodegen;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;
from solders.sysvar import RENT;


class DepositJSON(typing.TypedDict):
    kind: typing.Literal["Deposit"]


@dataclass
class Deposit:
    discriminator: typing.ClassVar = 0
    def to_json(self) -> DepositJSON:
        return DepositJSON(
            kind="Deposit",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Deposit": {},
        }




class WithdrawJSON(typing.TypedDict):
    kind: typing.Literal["Withdraw"]


@dataclass
class Withdraw:
    discriminator: typing.ClassVar = 1
    def to_json(self) -> WithdrawJSON:
        return WithdrawJSON(
            kind="Withdraw",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Withdraw": {},
        }





DepositDirectionKind = typing.Union[
    Deposit,
    Withdraw,
]
DepositDirectionJSON = typing.Union[
    DepositJSON,
    WithdrawJSON,
]

def from_decoded(obj: dict) -> DepositDirectionKind:
    if not isinstance(obj, dict):
        raise ValueError("Invalid enum object")
    if "Deposit" in obj:
      return Deposit()
    if "Withdraw" in obj:
      return Withdraw()
    raise ValueError("Invalid enum object")

def from_json(obj: DepositDirectionJSON) -> DepositDirectionKind:
    if obj["kind"] == "Deposit":
        return Deposit()

    if obj["kind"] == "Withdraw":
        return Withdraw()

    kind = obj["kind"]
    raise ValueError(f"Unrecognized enum kind: {kind}")

layout = EnumForCodegen(
"Deposit" / borsh.CStruct(),
"Withdraw" / borsh.CStruct(),
)
