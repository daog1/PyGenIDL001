'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey, EnumForCodegen;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey as SolPubkey;
from solders.sysvar import RENT;


class DiscountJSON(typing.TypedDict):
    kind: typing.Literal["Discount"]


@dataclass
class Discount:
    discriminator: typing.ClassVar = 0
    def to_json(self) -> DiscountJSON:
        return DiscountJSON(
            kind="Discount",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Discount": {},
        }




class PremiumJSON(typing.TypedDict):
    kind: typing.Literal["Premium"]


@dataclass
class Premium:
    discriminator: typing.ClassVar = 1
    def to_json(self) -> PremiumJSON:
        return PremiumJSON(
            kind="Premium",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Premium": {},
        }





LiquidationMultiplierTypeKind = typing.Union[
    Discount,
    Premium,
]
LiquidationMultiplierTypeJSON = typing.Union[
    DiscountJSON,
    PremiumJSON,
]

def from_decoded(obj: dict) -> LiquidationMultiplierTypeKind:
    if not isinstance(obj, dict):
        raise ValueError("Invalid enum object")
    if "Discount" in obj:
      return Discount()
    if "Premium" in obj:
      return Premium()
    raise ValueError("Invalid enum object")

def from_json(obj: LiquidationMultiplierTypeJSON) -> LiquidationMultiplierTypeKind:
    if obj["kind"] == "Discount":
        return Discount()

    if obj["kind"] == "Premium":
        return Premium()

    kind = obj["kind"]
    raise ValueError(f"Unrecognized enum kind: {kind}")

layout = EnumForCodegen(
"Discount" / borsh.CStruct(),
"Premium" / borsh.CStruct(),
)
