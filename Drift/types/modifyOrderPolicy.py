'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from anchorpy.borsh_extension import EnumForCodegen
from dataclasses import dataclass


class MustModifyJSON(typing.TypedDict):
    kind: typing.Literal["MustModify"]


@dataclass
class MustModify:
    discriminator: typing.ClassVar = 0
    def to_json(self) -> MustModifyJSON:
        return MustModifyJSON(
            kind="MustModify",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "MustModify": {},
        }




class ExcludePreviousFillJSON(typing.TypedDict):
    kind: typing.Literal["ExcludePreviousFill"]


@dataclass
class ExcludePreviousFill:
    discriminator: typing.ClassVar = 1
    def to_json(self) -> ExcludePreviousFillJSON:
        return ExcludePreviousFillJSON(
            kind="ExcludePreviousFill",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "ExcludePreviousFill": {},
        }





ModifyOrderPolicyKind = typing.Union[
    MustModify,
    ExcludePreviousFill,
]
ModifyOrderPolicyJSON = typing.Union[
    MustModifyJSON,
    ExcludePreviousFillJSON,
]

def from_decoded(obj: dict) -> ModifyOrderPolicyKind:
    if not isinstance(obj, dict):
        raise ValueError("Invalid enum object")
    if "MustModify" in obj:
      return MustModify()
    if "ExcludePreviousFill" in obj:
      return ExcludePreviousFill()
    raise ValueError("Invalid enum object")

def from_json(obj: ModifyOrderPolicyJSON) -> ModifyOrderPolicyKind:
    if obj["kind"] == "MustModify":
        return MustModify()

    if obj["kind"] == "ExcludePreviousFill":
        return ExcludePreviousFill()

    kind = obj["kind"]
    raise ValueError(f"Unrecognized enum kind: {kind}")


layout = EnumForCodegen(
"MustModify" / borsh.CStruct(),
"ExcludePreviousFill" / borsh.CStruct(),
)
