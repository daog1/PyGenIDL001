'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey;
from solders.sysvar import RENT;

class ValidityGuardRailsJSON(typing.TypedDict):
    slotsBeforeStaleForAmm: int
    slotsBeforeStaleForMargin: int
    confidenceIntervalMaxSize: int
    tooVolatileRatio: int

@dataclass
class ValidityGuardRails:
    layout: typing.ClassVar = borsh.CStruct(
        "slotsBeforeStaleForAmm" /borsh.I64,
        "slotsBeforeStaleForMargin" /borsh.I64,
        "confidenceIntervalMaxSize" /borsh.U64,
        "tooVolatileRatio" /borsh.I64,
        )
    #fields
    slotsBeforeStaleForAmm: int
    slotsBeforeStaleForMargin: int
    confidenceIntervalMaxSize: int
    tooVolatileRatio: int
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "ValidityGuardRails":
        return cls(
       slotsBeforeStaleForAmm=obj["slotsBeforeStaleForAmm"],slotsBeforeStaleForMargin=obj["slotsBeforeStaleForMargin"],confidenceIntervalMaxSize=obj["confidenceIntervalMaxSize"],tooVolatileRatio=obj["tooVolatileRatio"]
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
                "slotsBeforeStaleForAmm": self.slotsBeforeStaleForAmm,
                "slotsBeforeStaleForMargin": self.slotsBeforeStaleForMargin,
                "confidenceIntervalMaxSize": self.confidenceIntervalMaxSize,
                "tooVolatileRatio": self.tooVolatileRatio,
                }

    def to_json(self) -> ValidityGuardRailsJSON:
        return {
                "slotsBeforeStaleForAmm": self.slotsBeforeStaleForAmm,
                "slotsBeforeStaleForMargin": self.slotsBeforeStaleForMargin,
                "confidenceIntervalMaxSize": self.confidenceIntervalMaxSize,
                "tooVolatileRatio": self.tooVolatileRatio,
                }

    @classmethod
    def from_json(cls, obj: ValidityGuardRailsJSON) -> "ValidityGuardRails":
        return cls(
                slotsBeforeStaleForAmm=obj["slotsBeforeStaleForAmm"],
                slotsBeforeStaleForMargin=obj["slotsBeforeStaleForMargin"],
                confidenceIntervalMaxSize=obj["confidenceIntervalMaxSize"],
                tooVolatileRatio=obj["tooVolatileRatio"],
        )






