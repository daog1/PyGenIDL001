'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey;
from solders.sysvar import RENT;

class SwiftUserOrdersFixedJSON(typing.TypedDict):
    userPubkey: str
    padding: int
    len: int

@dataclass
class SwiftUserOrdersFixed:
    layout: typing.ClassVar = borsh.CStruct(
        "userPubkey" /BorshPubkey,
        "padding" /borsh.U32,
        "len" /borsh.U32,
        )
    #fields
    userPubkey: Pubkey
    padding: int
    len: int
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "SwiftUserOrdersFixed":
        return cls(
                   userPubkey=obj.userPubkey,
                   padding=obj.padding,
                   len=obj.len,
                )

    #def to_encodable(self) -> dict[str, typing.Any]:
    #    return {"row": self.row, "column": self.column}

    def to_json(self) -> SwiftUserOrdersFixedJSON:
        return {
                "userPubkey": str(self.userPubkey),
                "padding": self.padding,
                "len": self.len,
        }

    @classmethod
    def from_json(cls, obj: SwiftUserOrdersFixedJSON) -> "SwiftUserOrdersFixed":
        return cls(
                userPubkey=Pubkey.from_string(obj["userPubkey"]),
                padding=obj["padding"],
                len=obj["len"],
        )






