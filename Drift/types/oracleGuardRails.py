'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh;
import typing;
from anchorpy.borsh_extension import BorshPubkey;
from construct import Container;
from dataclasses import dataclass;
from solders.pubkey import Pubkey;
from solders.sysvar import RENT;

class OracleGuardRailsJSON(typing.TypedDict):
    priceDivergence: types.priceDivergenceGuardRails.PriceDivergenceGuardRailsJSON
    validity: types.validityGuardRails.ValidityGuardRailsJSON

@dataclass
class OracleGuardRails:
    layout: typing.ClassVar = borsh.CStruct(
        "priceDivergence" /types.priceDivergenceGuardRails.PriceDivergenceGuardRails.layout,
        "validity" /types.validityGuardRails.ValidityGuardRails.layout,
        )
    #fields
    priceDivergence: types.priceDivergenceGuardRails.PriceDivergenceGuardRails
    validity: types.validityGuardRails.ValidityGuardRails
    
    @classmethod
    def from_decoded(cls, obj: Container) -> "OracleGuardRails":
        return cls(
                   priceDivergence=obj.priceDivergence,
                   validity=obj.validity,
                )

    #def to_encodable(self) -> dict[str, typing.Any]:
    #    return {"row": self.row, "column": self.column}

    def to_json(self) -> OracleGuardRailsJSON:
        return {
                "priceDivergence": self.priceDivergence.to_json(),
                "validity": self.validity.to_json(),
        }

    @classmethod
    def from_json(cls, obj: OracleGuardRailsJSON) -> "OracleGuardRails":
        return cls(
                priceDivergence=types.priceDivergenceGuardRails.PriceDivergenceGuardRails.from_json(obj["priceDivergence"]),
                validity=types.validityGuardRails.ValidityGuardRails.from_json(obj["validity"]),
        )






