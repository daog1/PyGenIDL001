'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from anchorpy.borsh_extension import EnumForCodegen
from dataclasses import dataclass


class InitialJSON(typing.TypedDict):
    kind: typing.Literal["Initial"]


@dataclass
class Initial:
    discriminator: typing.ClassVar = 0
    def to_json(self) -> InitialJSON:
        return InitialJSON(
            kind="Initial",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Initial": {},
        }




class FillJSON(typing.TypedDict):
    kind: typing.Literal["Fill"]


@dataclass
class Fill:
    discriminator: typing.ClassVar = 1
    def to_json(self) -> FillJSON:
        return FillJSON(
            kind="Fill",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Fill": {},
        }




class MaintenanceJSON(typing.TypedDict):
    kind: typing.Literal["Maintenance"]


@dataclass
class Maintenance:
    discriminator: typing.ClassVar = 2
    def to_json(self) -> MaintenanceJSON:
        return MaintenanceJSON(
            kind="Maintenance",
        )

    def to_encodable(self) -> dict[str, typing.Any]:
        return {
            "Maintenance": {},
        }





MarginRequirementTypeKind = typing.Union[
    Initial,
    Fill,
    Maintenance,
]
MarginRequirementTypeJSON = typing.Union[
    InitialJSON,
    FillJSON,
    MaintenanceJSON,
]

def from_decoded(obj: dict) -> MarginRequirementTypeKind:
    if not isinstance(obj, dict):
        raise ValueError("Invalid enum object")
    if "Initial" in obj:
      return Initial()
    if "Fill" in obj:
      return Fill()
    if "Maintenance" in obj:
      return Maintenance()
    raise ValueError("Invalid enum object")

def from_json(obj: MarginRequirementTypeJSON) -> MarginRequirementTypeKind:
    if obj["kind"] == "Initial":
        return Initial()

    if obj["kind"] == "Fill":
        return Fill()

    if obj["kind"] == "Maintenance":
        return Maintenance()

    kind = obj["kind"]
    raise ValueError(f"Unrecognized enum kind: {kind}")


layout = EnumForCodegen(
"Initial" / borsh.CStruct(),
"Fill" / borsh.CStruct(),
"Maintenance" / borsh.CStruct(),
)
